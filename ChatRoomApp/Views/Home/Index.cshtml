@model List<ChatRoom>
@using Newtonsoft.Json
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Welcome to Chat Rooms App";
}

@section head {
    @*<script src='//production-assets.codepen.io/assets/editor/live/console_runner-079c09a0e3b9ff743e39ee2d5637b9216b3545af0de366d4b9aad9dc87e26bfd.js'></script>*@
    @*<script src='//production-assets.codepen.io/assets/editor/live/events_runner-73716630c22bbc8cff4bd0f07b135f00a0bdc5d14629260c3ec49e5606f98fdd.js'></script>*@
    @*<script src='//production-assets.codepen.io/assets/editor/live/css_live_reload_init-2c0dc5167d60a5af3ee189d570b1835129687ea2a61bee3513dee3a50c115a77.js'></script>*@

    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700,300' rel='stylesheet' type='text/css'>
    <script src="https://use.typekit.net/hoy3lrg.js"></script>
    <script>try { Typekit.load({ async: true }); } catch (e) { }</script>
    <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
    <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>

    <link href="~/ChatUI/style.css" rel="stylesheet" />
}

@{
    if (SignInManager.IsSignedIn(User))
    {
        <div id="frame" style="margin-top: 70px;">
            <div id="sidepanel">
                <div id="profile">
                    <div class="wrap">
                        <img id="profile-img" src="~/images/profile-picture.png" class="online" alt="" />
                        <p>@UserManager.GetUserAsync(User).Result.FirstName</p>
                        <i class="fa fa-chevron-down expand-button" aria-hidden="true"></i>
                        <div id="status-options">
                            <ul>
                                <li id="status-online" class="active"><span class="status-circle"></span> <p>Online</p></li>
                                <li id="status-away"><span class="status-circle"></span> <p>Away</p></li>
                                <li id="status-busy"><span class="status-circle"></span> <p>Busy</p></li>
                                <li id="status-offline"><span class="status-circle"></span> <p>Offline</p></li>
                            </ul>
                        </div>
                        <div id="expanded">
                            <label for="twitter"><i class="fa fa-facebook fa-fw" aria-hidden="true"></i></label>
                            <input name="twitter" type="text" value="mikeross" />
                            <label for="twitter"><i class="fa fa-twitter fa-fw" aria-hidden="true"></i></label>
                            <input name="twitter" type="text" value="ross81" />
                            <label for="twitter"><i class="fa fa-instagram fa-fw" aria-hidden="true"></i></label>
                            <input name="twitter" type="text" value="mike.ross" />
                        </div>
                    </div>
                </div>
                <div id="search">
                    <label for=""><i class="fa fa-search" aria-hidden="true"></i></label>
                    <input type="text" placeholder="Search contacts..." />
                </div>
                <div id="contacts">
                    <ul>
                        @foreach (ChatRoom chat in Model)
                        {
                            <li class="contact @(chat == Model.First() ? "active" : "")" data-chatroomid="@chat.Id">
                                <div class="wrap">
                                    <span class="contact-status online"></span>
                                    <img src="~/images/chat-icon.png" alt="" />
                                    <div class="meta">
                                        <p class="name">@chat.Name</p>
                                        <p class="preview">@(chat.Messages.Count > 0 ? chat.Messages.OrderByDescending(x => x.SentOn).First().Content : "")</p>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div id="bottom-bar">
                    <button id="addcontact" onclick="window.location = 'ChatRooms/Create'"><i class="fa fa-user-plus fa-fw" aria-hidden="true"></i> <span>Add Chat Room</span></button>
                    <button id="settings"><i class="fa fa-cog fa-fw" aria-hidden="true"></i> <span>Settings</span></button>
                </div>
            </div>
            <div class="content">
                <div class="contact-profile">
                    <img src="~/images/chat-icon.png" alt="" />
                    <p>@(Model.Count > 0 ? Model.First().Name : "")</p>
                    <div class="social-media">
                        <i class="fa fa-facebook" aria-hidden="true"></i>
                        <i class="fa fa-twitter" aria-hidden="true"></i>
                        <i class="fa fa-instagram" aria-hidden="true"></i>
                    </div>
                </div>
                <div class="messages">
                    <ul></ul>
                </div>
                <div class="message-input">
                    <div class="wrap">
                        <input type="text" placeholder="Escribe un mensaje..." />
                        <i class="fa fa-paperclip attachment" aria-hidden="true"></i>
                        <button class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        // CUANDO NO HA INICIADO SESIÓN
    }
}




@section scripts {

    @*<script src='//production-assets.codepen.io/assets/common/stopExecutionOnTimeout-b2a7b3fe212eaa732349046d8416e00a9dec26eb7fd347590fbced3ab38af52e.js'></script>*@
    @*<script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>*@
    <script>

        $(document).ready(function () {
            $('#contacts ul li.active').trigger('click');
        });

        //$(".messages").animate({ scrollTop: $(document).height() }, "fast");
        $(".messages").animate({ scrollTop: 5000 }, "fast");

        // Al seleccionar un chat
        $('#contacts ul li.contact').click(function () {
            $('#contacts ul li.contact').removeClass('active');
            $(this).toggleClass('active');
            $('.content .contact-profile p').text($('.contact.active .name').text());

            var chatData = {
                id: $(this).data('chatroomid'),
                messages: null
            }

            $.ajax({
                type: 'GET',
                url: 'api/messages/chatroom/' + $(this).data('chatroomid'),
                success: function (response) {
                    chatData.messages = response;
                    $(document).data("ActiveChat", chatData);

                    $('.messages ul').html('');

                    $.each(response, function (key, message) {
                        drawMessage(
                            message.isMyMessage ? 'sent' : 'replies',
                            message.content,
                            message.sentOnString,
                            (key == response.length - 1) ? true : false
                        );
                    });
                },
                error: function (ex) {
                    console.log('Error al obtener los mensajes del chat.');
                }
            });
        });

        $("#profile-img").click(function () {
            $("#status-options").toggleClass("active");
        });

        $(".expand-button").click(function () {
            $("#profile").toggleClass("expanded");
            $("#contacts").toggleClass("expanded");
        });

        $("#status-options ul li").click(function () {
            $("#profile-img").removeClass();
            $("#status-online").removeClass("active");
            $("#status-away").removeClass("active");
            $("#status-busy").removeClass("active");
            $("#status-offline").removeClass("active");
            $(this).addClass("active");

            if ($("#status-online").hasClass("active")) {
                $("#profile-img").addClass("online");
            } else if ($("#status-away").hasClass("active")) {
                $("#profile-img").addClass("away");
            } else if ($("#status-busy").hasClass("active")) {
                $("#profile-img").addClass("busy");
            } else if ($("#status-offline").hasClass("active")) {
                $("#profile-img").addClass("offline");
            } else {
                $("#profile-img").removeClass();
            };

            $("#status-options").removeClass("active");
        });

        function drawMessage(messageClass, message, sentOn, goDown = true) {
            var imgUrl = messageClass == 'sent' ? 'images/profile-picture.png' : 'images/chat-icon.png';
            var timestamp = '<span class="timestamp">' + sentOn + '</span>';
            $('<li class="' + messageClass + '"><img src="' + imgUrl + '" alt="" /><p>' + message + '<br>' + timestamp + '</p></li>').appendTo($('.messages ul'));
            $('.message-input input').val(null);
            //$('.contact.active .preview').html('<span>You: </span>' + message);
            $('.contact.active .preview').html(message);
            if (goDown) {
                $(".messages").animate({ scrollTop: 5000 }, "fast");
            }
        }

        function newMessage() {
            message = $(".message-input input").val();
            chatRoomId = $('#contacts ul li.active').data('chatroomid');
            if ($.trim(message) == '') {
                return false;
            }

            $.ajax({
                type: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                dataType: 'json',
                url: 'api/messages',
                data: JSON.stringify({
                    'Content': message,
                    'ChatRoomId': chatRoomId
                }),
                success: function (response) {
                    drawMessage("sent", message, response.sentOnString);
                },
                error: function () {
                    console.log('No se pudo enviar el mensaje.');
                }
            });

        };

        $('.submit').click(function () {
            newMessage();
        });

        $(window).on('keydown', function (e) {
            if (e.which == 13) {
                newMessage();
                return false;
            }
        });
                                            //# sourceURL=pen.js
    </script>


}
